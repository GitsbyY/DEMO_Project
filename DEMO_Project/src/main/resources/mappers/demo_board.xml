<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.board">
   <resultMap type="reviewDto" id="reviewResultMap">
      <id column="REVIEW_NO" property="reviewNo" />
      <result column="MEMBER_NO" property="memberNo" />
      <result column="PRODUCT_NO" property="productNo" />
      <result column="REVIEW_TITLE" property="reviewTitle" />
      <result column="REVIEW_CONTENT" property="reviewContent" />
      <result column="REVIEW_CRE_DATE" property="reviewCreDate"
         javaType="java.util.Date" />
      <result column="REVIEW_MOD_DATE" property="reviewModDate"
         javaType="java.util.Date" />
   </resultMap>
   
   <resultMap type="inquiryDto" id="inquiryResultMap">
      <id column="INQUIRY_NO" property="inquiryNo" />
      <result column="MEMBER_NO" property="memberNo" />
      <result column="INQUIRY_TYPE" property="inquiryType" />
      <result column="MEMBER_NAME" property="memberName" />
      <result column="INQUIRY_CRE_DATE" property="inquiryCreDate"
         javaType="java.util.Date" />
      <result column="INQUIRY_TITLE" property="inquiryTitle" />
      <result column="INQUIRY_CONTENT" property="inquiryContent" />
      <result column="INQUIRY_IS_REPLY" property="is_Reply" />
   </resultMap>
   
   <resultMap type="ReplyDto" id="replyDtoResultMap">
      <id column="INQUIRY_NO" property="inquiryNo" />
      <result column="MEMBER_NO" property="memberNo" />
      <result column="REPLY_CRE_DATE" property="replyCreDate"
         javaType="java.util.Date" />
      <result column="REPLY_MEMBER_NAME" property="memberName" />
      <result column="REPLY_TITLE" property="replyTitle" />
      <result column="REPLY_CONTENT" property="replyContent" />
   </resultMap>
   
   <resultMap type="noticeDto" id="noticeResultMap">
      <id column="NOTICE_NO" property="noticeNo" />
      <result column="MEMBER_NO" property="memberNo" />
      <result column="NOTICE_TITLE" property="noticeTitle" />
      <result column="NOTICE_CONTENT" property="noticeContent" />
      <result column="NOTICE_CRE_DATE" property="noticeCreDate"
         javaType="java.util.Date" />
   </resultMap>
     
   <resultMap type="noticeReplyDto" id="noticeReplyResultMap">
      <id column="NOTICE_REPLY_NO" property="noticeReplyNo" />
      <result column="MEMBER_NO" property="memberNo" />
      <result column="NOTICE_NO" property="noticeNo" />
      <result column="NOTICE_REPLY_CONTENT" property="noticeReplyContent" />
      <result column="NOTICE_REPLY_CRE_DATE" property="noticeReplyCreDate"
         javaType="java.util.Date" />
   </resultMap>
   
   <resultMap type="reviewReplyDto" id="reviewReplyResultMap">
      <id column="REVIEW_REPLY_NO" property="reviewReplyNo" />
      <result column="MEMBER_NO" property="memberNo" />
      <result column="REVIEW_NO" property="reviewNo" />
      <result column="REVIEW_REPLY_CONTENT" property="reviewReplyContent" />
      <result column="REVIEW_REPLY_CRE_DATE" property="reviewReplyCreDate"
         javaType="java.util.Date" />
   </resultMap>
   
   <select id="noticeSelectList" parameterType="map" resultType="map">   
      SELECT 
       NOTICE.NOTICE_NO, 
       NOTICE.MEMBER_NO, 
       NOTICE.NOTICE_TITLE, 
       NOTICE.NOTICE_CONTENT, 
       NOTICE.NOTICE_CRE_DATE, 
       MEMBER.MEMBER_NAME
      FROM (
       SELECT ROWNUM AS RNUM, N.NOTICE_NO, N.MEMBER_NO, N.NOTICE_TITLE
       , N.NOTICE_CONTENT, N.NOTICE_CRE_DATE
       FROM (
        SELECT NOTICE_NO, MEMBER_NO, NOTICE_TITLE, NOTICE_CONTENT, NOTICE_CRE_DATE
        FROM NOTICE
        ORDER BY NOTICE_CRE_DATE DESC
       ) N
      ) NOTICE 
      JOIN MEMBER ON NOTICE.MEMBER_NO = MEMBER.MEMBER_NO
      WHERE NOTICE.RNUM BETWEEN #{start} AND #{end}
   </select>  
   
   <select id="reviewSelectList" parameterType="map" resultType="map">   
      SELECT 
       REVIEW.REVIEW_NO, 
       REVIEW.MEMBER_NO, 
       REVIEW.PRODUCT_NO, 
       REVIEW.REVIEW_TITLE, 
       REVIEW.REVIEW_CONTENT, 
       REVIEW.REVIEW_CRE_DATE, 
       REVIEW.REVIEW_MOD_DATE, 
       PRODUCT.PRODUCT_NAME, 
       MEMBER.MEMBER_NAME, 
       PET.PET_BREED
      FROM (
       SELECT ROWNUM AS RNUM, R.REVIEW_NO, R.MEMBER_NO, R.PRODUCT_NO
       , R.REVIEW_TITLE, R.REVIEW_CONTENT, R.REVIEW_CRE_DATE, R.REVIEW_MOD_DATE
       FROM (
        SELECT REVIEW_NO, MEMBER_NO, PRODUCT_NO, REVIEW_TITLE, REVIEW_CONTENT, REVIEW_CRE_DATE, REVIEW_MOD_DATE
        FROM REVIEW
        ORDER BY REVIEW_CRE_DATE DESC
       ) R
      ) REVIEW 
      JOIN PRODUCT 
      ON REVIEW.PRODUCT_NO = PRODUCT.PRODUCT_NO
      JOIN MEMBER ON REVIEW.MEMBER_NO = MEMBER.MEMBER_NO
      JOIN PET ON MEMBER.MEMBER_NO = PET.MEMBER_NO
      WHERE (REVIEW.RNUM BETWEEN #{start} AND #{end})
      AND
      <if test="select == 'PRODUCT_NAME'">
      PRODUCT.PRODUCT_NAME LIKE '%'||#{search}||'%'
      </if>
		<if test="select == 'PET_BREED'">
      PET.PET_BREED LIKE '%'||#{search}||'%'
      </if>
      <if test="select == 'REVIEW_TITLE'">
      REVIEW.REVIEW_TITLE LIKE '%'||#{search}||'%'
      </if>
   </select>   
   
   <select id="inquirySelectList" parameterType="map" resultType="map">   
     SELECT 
     SUBQUERY.INQUIRY_NO, 
     SUBQUERY.MEMBER_NO, 
     SUBQUERY.INQUIRY_TYPE, 
     SUBQUERY.MEMBER_NAME, 
     SUBQUERY.INQUIRY_CRE_DATE, 
     SUBQUERY.INQUIRY_TITLE, 
     SUBQUERY.INQUIRY_CONTENT, 
     SUBQUERY.INQUIRY_IS_REPLY, 
     SUBQUERY.REPLY_CONTENT,
     SUBQUERY.REPLY_CRE_DATE
   FROM (
     SELECT 
    I.INQUIRY_NO, 
    I.MEMBER_NO, 
    I.INQUIRY_TYPE, 
    I.MEMBER_NAME, 
    I.INQUIRY_CRE_DATE, 
    I.INQUIRY_TITLE, 
    I.INQUIRY_CONTENT, 
    I.INQUIRY_IS_REPLY, 
    R.REPLY_CRE_DATE, 
    R.REPLY_MEMBER_NAME, 
    R.REPLY_TITLE, 
    R.REPLY_CONTENT,
    ROW_NUMBER() OVER (ORDER BY I.INQUIRY_CRE_DATE DESC) AS RNUM
     FROM 
    INQUIRY I
     LEFT JOIN 
    REPLY R 
     ON 
    I.INQUIRY_NO = R.INQUIRY_NO
   ) SUBQUERY
   WHERE 
  SUBQUERY.RNUM BETWEEN #{start} AND #{end}
   </select>
   
	<select id="list" parameterType="map" resultType="map">
	
	SELECT REVIEW_REPLY_NO, REVIEW_REPLY.MEMBER_NO, REVIEW_NO, REVIEW_REPLY_CONTENT, REVIEW_REPLY_CRE_DATE, MEMBER.MEMBER_NAME
	FROM REVIEW_REPLY JOIN MEMBER
	ON REVIEW_REPLY.MEMBER_NO = MEMBER.MEMBER_NO	
	WHERE REVIEW_NO = #{reviewNo}
	ORDER BY REVIEW_REPLY_NO
	</select>
	
	<select id="noticeReplylist" parameterType="map" resultType="map">
	
	SELECT NOTICE_REPLY_NO, NOTICE_REPLY.MEMBER_NO, NOTICE_NO, NOTICE_REPLY_CONTENT, NOTICE_REPLY_CRE_DATE, MEMBER.MEMBER_NAME
	FROM NOTICE_REPLY JOIN MEMBER
	ON NOTICE_REPLY.MEMBER_NO = MEMBER.MEMBER_NO
	WHERE NOTICE_NO = #{noticeNo}
	ORDER BY NOTICE_REPLY_NO
	</select>
	
   
   <select id="noticeSelectTotalCount" resultType="java.lang.Integer">
      SELECT COUNT(*)
      FROM NOTICE
   </select>
   
   <select id="inquirySelectTotalCount" resultType="java.lang.Integer">
      SELECT COUNT(*)
      FROM INQUIRY
   </select>
   
   <select id="reviewSelectTotalCount" resultType="java.lang.Integer">
      SELECT COUNT(*)
      FROM REVIEW
   </select> 
  
   <select id="noticeSelectOne" parameterType="int"
       resultType="map">
      SELECT NOTICE_NO, N.MEMBER_NO,M.MEMBER_NAME, NOTICE_TITLE, NOTICE_CONTENT
      , NOTICE_CRE_DATE
      FROM NOTICE N JOIN MEMBER M
      ON N.MEMBER_NO = M.MEMBER_NO
      WHERE NOTICE_NO = #{no}
   </select>
   
   <select id="replySelectOne" parameterType="int"
       resultType="map">
      SELECT I.INQUIRY_NO, R.MEMBER_NO, R.REPLY_CRE_DATE, R.REPLY_MEMBER_NAME
      , R.REPLY_CONTENT, R.REPLY_TITLE
      FROM REPLY R JOIN INQUIRY I
      ON R.INQUIRY_NO = I.INQUIRY_NO
      WHERE R.INQUIRY_NO = #{no}
   </select>
   
   <select id="memberInfo" parameterType="int"
       resultType="map">
         SELECT P.PRODUCT_NAME, T.PET_BREED, M.MEMBER_NO, P.PRODUCT_NO
      FROM PET T JOIN MEMBER M
      ON T.MEMBER_NO = M.MEMBER_NO
      JOIN ORDER_LIST O
      ON M.MEMBER_NO = O.MEMBER_NO
      JOIN PRODUCT P
      ON O.PRODUCT_NO = P.PRODUCT_NO
      WHERE M.MEMBER_NO = #{memberNo}
      
   </select>
   
   <select id="reviewSelectOne" parameterType="int"
       resultType="map">
      SELECT 
       REVIEW.REVIEW_NO, 
       REVIEW.MEMBER_NO, 
       REVIEW.PRODUCT_NO, 
       REVIEW.REVIEW_TITLE, 
       REVIEW.REVIEW_CONTENT, 
       REVIEW.REVIEW_CRE_DATE, 
       REVIEW.REVIEW_MOD_DATE, 
       PRODUCT.PRODUCT_NAME, 
       MEMBER.MEMBER_NAME, 
       PET.PET_BREED
      FROM (
       SELECT ROWNUM AS RNUM, R.REVIEW_NO, R.MEMBER_NO, R.PRODUCT_NO
       , R.REVIEW_TITLE, R.REVIEW_CONTENT, R.REVIEW_CRE_DATE, R.REVIEW_MOD_DATE
       FROM (
        SELECT REVIEW_NO, MEMBER_NO, PRODUCT_NO, REVIEW_TITLE, REVIEW_CONTENT
        , REVIEW_CRE_DATE, REVIEW_MOD_DATE
        FROM REVIEW
        ORDER BY REVIEW_CRE_DATE DESC
       ) R
      ) REVIEW 
      JOIN PRODUCT 
      ON REVIEW.PRODUCT_NO = PRODUCT.PRODUCT_NO
      JOIN MEMBER ON REVIEW.MEMBER_NO = MEMBER.MEMBER_NO
      JOIN PET ON MEMBER.MEMBER_NO = PET.MEMBER_NO
      WHERE REVIEW.REVIEW_NO = #{no}
   </select>
   
   <select id="fileSelectList" parameterType="int" resultType="map">
      SELECT IMG_NO, ORIGINAL_FILE_NAME, STORED_FILE_NAME
      , ROUND(FILE_SIZE/1024, 1) AS FILE_SIZE, IMG_CRE_DATE
      FROM IMG_FILE
      WHERE IMG_NO = #{no}
   </select>
   
   <select id="inquirySelectOne" parameterType="int"
       resultType="map">
      SELECT INQUIRY_NO, MEMBER_NO, INQUIRY_TYPE, MEMBER_NAME, INQUIRY_CRE_DATE
      , INQUIRY_TITLE, INQUIRY_CONTENT, INQUIRY_IS_REPLY
      FROM INQUIRY
      WHERE INQUIRY_NO = #{no}            
   </select>
   
   <insert id="noticeInsertOne" parameterType="noticeDto" 
      useGeneratedKeys="true" keyProperty= "noticeNo">
      <selectKey keyProperty="noticeNo" resultType="int" order="BEFORE">
         SELECT NOTICE_NO_SEQ.NEXTVAL
         FROM DUAL
      </selectKey>
      
      INSERT INTO NOTICE
      (NOTICE_NO, MEMBER_NO, NOTICE_TITLE, NOTICE_CONTENT, NOTICE_CRE_DATE)
      VALUES(#{noticeNo}, #{memberNo}, #{noticeTitle}, #{noticeContent}, SYSDATE)
   </insert>
   
    <insert id="reviewReplyWrite" parameterType="reviewReplyDto" 
      useGeneratedKeys="true" keyProperty= "reviewReplyNo">
      <selectKey keyProperty="reviewReplyNo" resultType="int" order="BEFORE">
         SELECT REVIEW_REPLY_NO_SEQ.NEXTVAL
         FROM DUAL
      </selectKey>
      
		INSERT INTO REVIEW_REPLY
		(REVIEW_REPLY_NO, MEMBER_NO, REVIEW_NO, REVIEW_REPLY_CONTENT, REVIEW_REPLY_CRE_DATE)
		VALUES(#{reviewReplyNo}, #{memberNo}, #{reviewNo}, #{reviewReplyContent}, SYSDATE)
   </insert>
   
   <insert id="noticeReplyWrite" parameterType="noticeReplyDto" 
      useGeneratedKeys="true" keyProperty= "noticeReplyNo">
      <selectKey keyProperty="noticeReplyNo" resultType="int" order="BEFORE">
         SELECT NOTICE_REPLY_NO_SEQ.NEXTVAL
         FROM DUAL
      </selectKey>
      
		INSERT INTO NOTICE_REPLY
		(NOTICE_REPLY_NO, MEMBER_NO, NOTICE_NO, NOTICE_REPLY_CONTENT, NOTICE_REPLY_CRE_DATE)
		VALUES(#{noticeReplyNo}, #{memberNo}, #{noticeNo}, #{noticeReplyContent}, SYSDATE)
   </insert>
   
   
   <insert id="replyInsertOne" parameterType="replyDto">
      
      INSERT INTO REPLY
      (INQUIRY_NO, MEMBER_NO, REPLY_CRE_DATE, REPLY_MEMBER_NAME, REPLY_TITLE, REPLY_CONTENT)
      VALUES(#{inquiryNo}, #{memberNo}, SYSDATE, #{memberName}
      , #{replyTitle}, #{replyContent})
            
   </insert>
   
   <insert id="reviewInsertOne" parameterType="reviewDto" 
      useGeneratedKeys="true" keyProperty= "reviewNo">
      <selectKey keyProperty="reviewNo" resultType="int" order="BEFORE">
         SELECT REVIEW_NO_SEQ.NEXTVAL
         FROM DUAL
      </selectKey>
      
      INSERT INTO REVIEW
      (REVIEW_NO, MEMBER_NO, PRODUCT_NO, REVIEW_TITLE, REVIEW_CONTENT,
       REVIEW_CRE_DATE, REVIEW_MOD_DATE)
      VALUES(#{reviewNo}, #{memberNo}, 1, #{reviewTitle}, #{reviewContent}
      , SYSDATE, SYSDATE)
   </insert>
   
   <insert id="inquiryInsertOne" parameterType="inquiryDto" 
      useGeneratedKeys="true" keyProperty="inquiryNo">
      <selectKey keyProperty="inquiryNo" resultType="int" order="BEFORE">
         SELECT INQUIRY_NO_SEQ.NEXTVAL
         FROM DUAL
      </selectKey>
      
      INSERT INTO INQUIRY
         (INQUIRY_NO, MEMBER_NO, INQUIRY_TYPE, MEMBER_NAME, INQUIRY_CRE_DATE
         , INQUIRY_TITLE, INQUIRY_CONTENT, INQUIRY_IS_REPLY)
      VALUES(#{inquiryNo}, #{memberNo}, #{inquiryType}, #{memberName}, SYSDATE
      , #{inquiryTitle}, #{inquiryContent}, 'N')
   </insert>
   
   <update id="noticeUpdateOne" parameterType="noticeDto">
      UPDATE NOTICE
      <set>
         <if test="noticeTitle != null">NOTICE_TITLE = #{noticeTitle},</if>
         <if test="noticeContent != null">NOTICE_CONTENT = #{noticeContent},</if>
         NOTICE_CRE_DATE = SYSDATE
      </set>
      WHERE NOTICE_NO = #{noticeNo}
   </update>
   
   <update id="inquiryUpdateReply" parameterType="replyDto">
      UPDATE INQUIRY
      <set>        
         INQUIRY_IS_REPLY = 'Y'
      </set>
      WHERE INQUIRY_NO = #{inquiryNo}
   </update>
   
   <update id="reviewReplyEdit" parameterType="reviewReplyDto">
      UPDATE REVIEW_REPLY
      <set>        
         REVIEW_REPLY_CONTENT = #{reviewReplyContent}, 
         REVIEW_REPLY_CRE_DATE = SYSDATE
      </set>
      WHERE REVIEW_REPLY_NO = #{reviewReplyNo}
   </update>
   
   <update id="noticeReplyEdit" parameterType="noticeReplyDto">
      UPDATE NOTICE_REPLY
      <set>        
         NOTICE_REPLY_CONTENT = #{noticeReplyContent}, 
         NOTICE_REPLY_CRE_DATE = SYSDATE
      </set>
      WHERE NOTICE_REPLY_NO = #{noticeReplyNo}
   </update>
      
   <update id="inquiryUpdateOne" parameterType="inquiryDto">
      UPDATE INQUIRY
      <set>
         <if test="inquiryTitle != null">INQUIRY_TITLE = #{inquiryTitle},</if>
         <if test="inquiryContent != null">INQUIRY_CONTENT = #{inquiryContent},</if>
         INQUIRY_CRE_DATE = SYSDATE
      </set>
      WHERE INQUIRY_NO = #{inquiryNo}
   </update>
   
   <update id="reviewUpdateOne" parameterType="reviewDto">
      UPDATE REVIEW
      <set>
         <if test="reviewTitle != null">REVIEW_TITLE = #{reviewTitle},</if>
         <if test="reviewContent != null">REVIEW_CONTENT = #{reviewContent},</if>
         REVIEW_CRE_DATE = SYSDATE
      </set>
      WHERE REVIEW_NO = #{reviewNo}
   </update>
   
   <delete id="noticeDeleteOne" parameterType="int">
      DELETE FROM NOTICE
      WHERE NOTICE_NO = #{value}
   </delete>
   
   <delete id="inquiryDeleteOne" parameterType="int">
      DELETE FROM INQUIRY
      WHERE INQUIRY_NO = #{value}
   </delete>
   
   <delete id="reviewDeleteOne" parameterType="int">
      DELETE FROM REVIEW
      WHERE REVIEW_NO = #{value}
   </delete>
   
   <delete id="reviewReplyDelete" parameterType="int">
      DELETE FROM REVIEW_REPLY
      WHERE REVIEW_REPLY_NO = #{value}
   </delete>
   
   <delete id="noticeReplyDelete" parameterType="int">
      DELETE FROM NOTICE_REPLY
      WHERE NOTICE_REPLY_NO = #{value}
   </delete>
   
</mapper>