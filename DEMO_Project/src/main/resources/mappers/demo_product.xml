<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.product">
	<resultMap type="cartDto" id="cartResultMap">
		<id column="PRODUCT_NO" property="productNo" />
		<result column="MEMBER_NO" property="memberNo" />
		<result column="PRODUCT_NAME" property="productName" />
		<result column="PRODUCT_PRICE" property="productPrice" />
		<result column="PRODUCT_QUANTITY" property="productQuantity" />
	</resultMap>
	
	<resultMap type="productDetailDto" id="productDetailResultMap">
		<id column="PRODUCT_DETAIL_NO" property="productDetailNo" />
		<result column="IMG_NO" property="imgNo" />
		<result column="PRODUCT_DETAIL_CONTENT" property="productDetailContent" />
	</resultMap>
	
	<resultMap type="productDto" id="productResultMap">
		<id column="PRODUCT_NO" property="productNo" />
		<result column="PRODUCT_DETAIL_NO" property="productDetailNo" />
		<result column="IMG_NO" property="imgNo" />
		<result column="PRODUCT_NAME" property="productName" />
		<result column="PRODUCT_PRICE" property="productPrice" />
		<result column="PRODUCT_STOCK" property="productStock" />
		<result column="PRODUCT_CATEGORY" property="productCategory" />
		<result column="PRODUCT_CRE_DATE" property="productCreDate"
			javaType="java.util.Date" />
		<result column="REVIEW_MOD_DATE" property="productModDate"
			javaType="java.util.Date" />
	</resultMap>
	
	<select id="productSelectList" parameterType="map"
	resultType="map">
	<choose>
		<when test="sort.contains('order')">
			SELECT P.PRODUCT_NO, P.IMG_NO, P.PRODUCT_NAME, P.PRODUCT_PRICE,
			P.PRODUCT_STOCK, P.PRODUCT_CATEGORY, P.PRODUCT_CRE_DATE,
			P.PRODUCT_MOD_DATE, P.RNUM, I.STORED_FILE_NAME
			FROM (
			SELECT ROWNUM AS RNUM, PRODUCT_NO, IMG_NO,
			PRODUCT_NAME, PRODUCT_PRICE,
			PRODUCT_STOCK, PRODUCT_CATEGORY,
			PRODUCT_CRE_DATE, PRODUCT_MOD_DATE, counting
			FROM (
			SELECT PRODUCT_NO, IMG_NO,
			PRODUCT_NAME, PRODUCT_PRICE,
			PRODUCT_STOCK, PRODUCT_CATEGORY,
			PRODUCT_CRE_DATE, PRODUCT_MOD_DATE, counting
			FROM (
			SELECT P.PRODUCT_NO, P.IMG_NO,
			P.PRODUCT_NAME, P.PRODUCT_PRICE,
			P.PRODUCT_STOCK, P.PRODUCT_CATEGORY,
			P.PRODUCT_CRE_DATE, P.PRODUCT_MOD_DATE, COALESCE(C.counting, 0) as counting
			FROM product P
			FULL OUTER JOIN
			(select product_no, count(*) as counting
			from order_list
			where order_status != '취소'
			group by product_no) C
			ON P.PRODUCT_NO = C.PRODUCT_NO
			WHERE PRODUCT_NAME LIKE '%'||#{search}||'%'
			AND PRODUCT_CATEGORY LIKE #{category}||'%'
			)
			ORDER BY
			<choose>
				<when test="sort == 'orderASC'">
					COUNTING ASC,
				</when>
				<when test="sort == 'orderDESC'">
					COUNTING DESC,
				</when>
			</choose>
			PRODUCT_NAME
			)
			) P
			INNER JOIN IMG_FILE I ON P.IMG_NO = I.IMG_NO
			WHERE P.RNUM BETWEEN #{start} AND #{end}
		</when>
		<otherwise>
			SELECT P.PRODUCT_NO, P.IMG_NO, P.PRODUCT_NAME, P.PRODUCT_PRICE,
			P.PRODUCT_STOCK, P.PRODUCT_CATEGORY, P.PRODUCT_CRE_DATE,
			P.PRODUCT_MOD_DATE, P.RNUM, I.STORED_FILE_NAME
			FROM (
			SELECT ROWNUM AS RNUM, PRODUCT_NO, IMG_NO,
			PRODUCT_NAME, PRODUCT_PRICE,
			PRODUCT_STOCK, PRODUCT_CATEGORY,
			PRODUCT_CRE_DATE, PRODUCT_MOD_DATE
			FROM (
			SELECT *
			FROM product
			WHERE PRODUCT_NAME LIKE '%'||#{search}||'%'
			AND PRODUCT_CATEGORY LIKE #{category}||'%'
			ORDER BY
			<choose>
				<when test="sort == 'priceASC'">
					PRODUCT_PRICE ASC,
				</when>
				<when test="sort == 'priceDESC'">
					PRODUCT_PRICE DESC,
				</when>
				<when test="sort == 'lastest'">
					PRODUCT_CRE_DATE DESC,
				</when>
				<when test="sort == 'oldest'">
					PRODUCT_CRE_DATE ASC,
				</when>
			</choose>
			PRODUCT_NAME
			)
			) P
			INNER JOIN IMG_FILE I ON P.IMG_NO = I.IMG_NO
			WHERE P.RNUM BETWEEN #{start} AND #{end}
		</otherwise>
	</choose>

</select>
	
	<select id="productSelectTotalCount" parameterType="map" resultType="int">
		SELECT COUNT(*)
		FROM PRODUCT
		WHERE PRODUCT_NAME LIKE '%'||#{search}||'%'
		AND PRODUCT_CATEGORY LIKE #{category}||'%'
	</select>
	
	<select id="createNewImgNo" parameterType="int" resultType="int">
		SELECT IMG_NO_SEQ.NEXTVAL
		FROM DUAL
	</select>
	
	<insert id="insertFile" parameterType="map">
		INSERT INTO IMG_FILE
			(IMG_NO, ORIGINAL_FILE_NAME, STORED_FILE_NAME, FILE_SIZE, IMG_CRE_DATE)
		VALUES(#{imgNo}, #{original_file_name}, #{stored_file_name}, #{file_size}, SYSDATE)
	</insert>
	
	<select id="selectImgNo" parameterType="String"
		resultType="int">
		SELECT IMG_NO
		FROM IMG_FILE
		WHERE STORED_FILE_NAME = #{pImgName}
	</select>
	
	<delete id="deleteFile" parameterType="String">
		DELETE FROM IMG_FILE
		WHERE STORED_FILE_NAME = #{storedFileName}
	</delete>
	
	<insert id="insertProductDetail" parameterType="productDetailDto"
		useGeneratedKeys="true" keyProperty="productDetailNo">
		<selectKey keyProperty="productDetailNo" resultType="int"
			order="BEFORE">
			SELECT PRODUCT_DETAIL_NO_SEQ.NEXTVAL
			FROM DUAL
		</selectKey>
		INSERT INTO PRODUCT_DETAIL
			(PRODUCT_DETAIL_NO, IMG_NO, PRODUCT_DETAIL_CONTENT)
		VALUES(#{productDetailNo},
			<if test="imgNo != 0">#{imgNo},</if>
			<if test="imgNo == 0">null,</if>
			#{productDetailContent})
	</insert>
	
	<insert id="insertProduct" parameterType="productDto">
		INSERT INTO PRODUCT
			(PRODUCT_NO, PRODUCT_DETAIL_NO, IMG_NO,
			PRODUCT_NAME, PRODUCT_PRICE, PRODUCT_STOCK,
			PRODUCT_CATEGORY, PRODUCT_CRE_DATE, PRODUCT_MOD_DATE)
		VALUES(PRODUCT_NO_SEQ.NEXTVAL, #{productDetailNo}, #{imgNo},
			#{productName}, #{productPrice}, #{productStock},
		    #{productCategory}, SYSDATE, SYSDATE)
	</insert>
	
	<select id="selectProductOne" parameterType="int"
		resultType="map">
		SELECT *
		FROM product P
		INNER JOIN product_detail PD ON P.product_detail_no = PD.product_detail_no
        INNER JOIN IMG_FILE I ON P.IMG_NO = I.IMG_NO
		WHERE P.product_no = #{no}
	</select>
	
	<update id="productImgUpdate" parameterType="map">
		UPDATE PRODUCT
		SET IMG_NO = #{imgNo}
		WHERE PRODUCT_NO = #{productNo}
	</update>
	
	<update id="updateProductDetail" parameterType="productDetailDto">
		UPDATE PRODUCT_DETAIL
		SET PRODUCT_DETAIL_CONTENT = #{productDetailContent}
		<if test="imgNo != 0">,IMG_NO = #{imgNo}</if>
		WHERE PRODUCT_DETAIL_NO = #{productDetailNo}
	</update>
	
	<update id="updateProduct" parameterType="productDto">
		UPDATE PRODUCT
		SET PRODUCT_NAME = #{productName},
			PRODUCT_PRICE = #{productPrice},
			PRODUCT_STOCK = #{productStock},
			PRODUCT_CATEGORY = #{productCategory},
			PRODUCT_MOD_DATE = SYSDATE
		WHERE PRODUCT_NO = #{productNo}
	</update>

	<insert id="insertCart" parameterType="map">
		insert into cart
		(PRODUCT_NO, MEMBER_NO, PRODUCT_NAME, PRODUCT_PRICE, PRODUCT_QUANTITY)
		VALUES(#{PRODUCT_NO}, #{memberNo}, #{PRODUCT_NAME},
			#{PRODUCT_PRICE}, #{productQuantity})
	</insert>
	
	<delete id="deleteCartOne" parameterType="map">
		DELETE FROM CART
		WHERE MEMBER_NO = #{memberNo}
		AND PRODUCT_NO = #{productNo}
	</delete>
	
	<delete id="deleteProductOne" parameterType="int">
		DELETE FROM PRODUCT
		WHERE PRODUCT_NO = #{productNo}
	</delete>
	
	<select id="selectCartOne" parameterType="map"
		resultType="map">
		SELECT *
		FROM CART
		WHERE MEMBER_NO = #{memberNo}
		AND PRODUCT_NO = #{productNo}
	</select>
	
	<update id="updateCartOne" parameterType="int">
		UPDATE CART
		SET PRODUCT_QUANTITY = #{stock}
		WHERE MEMBER_NO = #{memberNo}
		AND PRODUCT_NO = #{productNo}
	</update>
</mapper>



